name: "PR Checklist Validation"
on:
  pull_request:
    types: [opened, edited, synchronize]
permissions:
  pull-requests: write
  checks: write
jobs:
  check-pr-checklist:
    runs-on: ubuntu-latest
    steps:
      - name: Post reviewer checklist comment
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          script: |
            console.log('PR作成時にレビュアーチェックコメントを投稿します');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "## レビュアーチェックテンプレート\n\n- [ ] **動作確認**\n\n    - XXができること  \n    - XXにならないこと\n\n- [ ] **ロールによる挙動の差異が実装されている**  \n  コメント: \n\n- [ ] **作成したモジュール・クラス・関数のテストコードが追加・修正されている（コンポーネントテストも含む）**  \n  コメント: \n\n---\n*このチェックリストは自動生成されています。レビュアーは上記の項目をチェックしてレビューコメントを記入してください。*"
            });

      - name: Reset checklist on push
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        uses: actions/github-script@v6
        with:
          script: |
            console.log('新しいコミットがpushされました。チェックリストをリセットします');
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            let prBody = pr.body || '';

            // PRテンプレートのチェックリストをリセット
            const resetBody = prBody.replace(/^- \[x\]/gm, '- [ ]');

            if (resetBody !== prBody) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                body: resetBody
              });
            }

      - name: Check PR Checklist
        uses: actions/github-script@v6
        with:
          script: |
            console.log('ワークフローが開始されました');
            console.log('イベント名:', context.eventName);
            console.log('アクション:', context.payload.action);

            // PRの本文からチェックリストを抽出
            const prBody = context.payload.pull_request.body || '';

            // チェックリストアイテムの総数を取得
            const totalItems = (prBody.match(/^- \[/gm) || []).length;

            // チェック済みアイテムの数を取得
            const checkedItems = (prBody.match(/^- \[x\]/gm) || []).length;

            console.log(`PRテンプレートのチェックリスト進捗: ${checkedItems}/${totalItems}`);

            // チェックリストが存在しない場合は警告
            if (totalItems === 0) {
              console.log('::warning::PRテンプレートにチェックリストが見つかりません');
              return;
            }

            // synchronizeイベントの場合は、チェックリストがリセットされるので常に失敗
            if (context.eventName === 'pull_request' && context.payload.action === 'synchronize') {
              console.log('新しいコミットがpushされました。チェックリストを再確認してください');
              process.exit(1);
            }

            // PRテンプレートの全てのチェックが完了しているかチェック
            if (checkedItems === totalItems) {
              console.log('PRテンプレートの全てのチェックリストアイテムが完了しています');
              
              // チェック済みアイテムのコメントをチェック
              const lines = prBody.split('\n');
              let missingComments = 0;
              
              for (let i = 0; i < lines.length; i++) {
                const line = lines[i];
                if (line.match(/^- \[x\]/)) {
                  console.log(`チェック済みアイテム発見: ${line}`);
                  
                  // 次の行以降でコメント行を探す
                  let commentFound = false;
                  for (let j = i + 1; j < lines.length && j < i + 5; j++) {
                    const nextLine = lines[j];
                    if (nextLine.includes('コメント:')) {
                      // コメント行が見つかった場合、コメント内容をチェック
                      const commentContent = nextLine.split('コメント:')[1];
                      if (commentContent && commentContent.trim().length > 0) {
                        console.log(`コメント内容: "${commentContent.trim()}"`);
                        commentFound = true;
                      } else {
                        console.log(`空のコメント: ${nextLine}`);
                      }
                      break;
                    }
                  }
                  
                  if (!commentFound) {
                    missingComments++;
                    console.log(`コメントが記入されていません: ${line}`);
                  }
                }
              }
              
              if (missingComments > 0) {
                console.log(`チェック済みアイテムにコメントが記入されていません (${missingComments}件)`);
                process.exit(1);
              }
              
              console.log('PRテンプレートの全てのチェックリストアイテムが完了し、コメントも記入されています');
            } else {
              console.log(`PRテンプレートのチェックリストの完了が必要です (${checkedItems}/${totalItems})`);
              process.exit(1);
            }
